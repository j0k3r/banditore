# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # autorwire parameters
    App\Github\ClientDiscovery:
        arguments:
            $clientId: "%env(GITHUB_CLIENT_ID)%"
            $clientSecret: "%env(GITHUB_CLIENT_SECRET)%"

    App\Controller\DefaultController:
        arguments:
            $diffInterval: "%env(STATUS_MINUTE_INTERVAL_BEFORE_ALERT)%"
            $redis: "@snc_redis.app_cache"

    App\PubSubHubbub\Publisher:
        arguments:
            $hub: "http://pubsubhubbub.appspot.com"
            $host: "%env(PROJECT_HOST)%"
            $scheme: "%env(PROJECT_SCHEME)%"

    App\Command\SyncStarredReposCommand:
        arguments:
            $transport: "@messenger.transport.sync_starred_repos"

    App\Command\SyncVersionsCommand:
        arguments:
            $transport: "@messenger.transport.sync_versions"

    App\Webfeeds\WebfeedsWriter:
        tags:
            - { name: marcw_rss_writer.extension.writer }

    # lazy consumer
    # to avoid triggering Github Client Discovery
    # which will make a doctrine query on Travis because the default limit to Github will be reached
    App\MessageHandler\StarredReposSyncHandler:
        lazy: true
        arguments:
            $redis: "@snc_redis.app_cache"

    App\MessageHandler\VersionsSyncHandler:
        lazy: true

    # github stuff
    banditore.client.guzzle:
        class: GuzzleHttp\Client

    banditore.client.github:
        class: Github\Client
        factory: [ "@App\\Github\\ClientDiscovery", find ]

    # feed stuff
    banditore.writer.rss:
        class: MarcW\RssWriter\RssWriter
        arguments:
            - ~
            -
                core: "@marcw_rss_writer.writer.core"
                webfeeds: "@App\\Webfeeds\\WebfeedsWriter"
                atom: "@marcw_rss_writer.writer.atom"
            - true
            - "    "

    # force this service to be injected at first instead of the default one (from marcw)
    MarcW\RssWriter\RssWriter: '@banditore.writer.rss'

    App\Pagination\Paginator:
        arguments:
            -
                itemsPerPage: 30
                pagesInRange: 5

    Predis\Client:
        alias: snc_redis.guzzle_cache

    GuzzleHttp\Client:
        alias: banditore.client.guzzle

    Github\Client:
        alias: banditore.client.github

    # bundle not using recipe OR not compatible with Symfony > 3
    marcw_rss_writer.rss_writer:
        class: MarcW\RssWriter\RssWriter

    marcw_rss_writer.writer.core:
        class: MarcW\RssWriter\Extension\Core\CoreWriter
        tags:
            - { name: marcw_rss_writer.extension.writer }

    marcw_rss_writer.writer.atom:
        class: MarcW\RssWriter\Extension\Atom\AtomWriter
        tags:
            - { name: marcw_rss_writer.extension.writer }
