name: Coverage

on:
  pull_request:
    branches:
      - "master"
  push:
    branches:
      - "master"

env:
  APP_ENV: test

jobs:
  phpunit:
    name: PHPUnit
    runs-on: "ubuntu-latest"
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379

    strategy:
      matrix:
        php:
          - "8.2"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install PHP with PCOV
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          coverage: "pcov"
          tools: composer:v2
          extensions: pdo, pdo_mysql, curl, redis, amqp
          ini-values: "date.timezone=Europe/Paris"
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies with Composer
        uses: ramsey/composer-install@v3

      - name: Create database
        run: php bin/console doctrine:database:create --env=test

      - name: Create schema
        run: php bin/console doctrine:schema:create --env=test

      - name: Load fixtures
        run: php bin/console doctrine:fixtures:load --env=test -n

      - name: Setup messenger queue
        run: php bin/console messenger:setup-transports --env=dev

      - name: Run PHPUnit (with coverage)
        run: php bin/phpunit -v --coverage-clover=coverage.xml

      - name: Retrieve Coveralls phar
        run: wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.5.1/php-coveralls.phar

      - name: Enable Coveralls phar
        run: chmod +x php-coveralls.phar

      - name: Upload to Coveralls
        run: php php-coveralls.phar -v -x coverage.xml -o coveralls-upload.json
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
